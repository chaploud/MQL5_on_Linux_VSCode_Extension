{
  "name": "MQL5",
  "scopeName": "source.mql55",
  "fileTypes": ["mq5", "mqh"],
  "foldingStartMarker": "(^.)?\\{",
  "foldingStopMarker": "(^\\s*)?\\}",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "comment": "double-quoted strings",
      "name": "string.quoted.double.mql5",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.mql5"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.mql5"
        }
      },
      "patterns": [
        {
          "include": "#escape_characters"
        }
      ]
    },
    {
      "comment": "single-quoted strings",
      "name": "string.quoted.single.mql5",
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.mql5"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.mql5"
        }
      },
      "patterns": [
        {
          "include": "#escape_characters"
        }
      ]
    },
    {
      "comment": "include paths",
      "name": "string.other.mql5",
      "begin": "(#include)(?:\\s*)(<)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.preprocessor.mql5"
        },
        "2": {
          "name": "punctuation.definition.string.begin.mql5"
        }
      },
      "end": ">",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.mql5"
        }
      }
    },
    {
      "comment": "preprocessor directives",
      "name": "keyword.control.preprocessor.mql5",
      "match": "#\\b(property|resource|define|undef|include|import|ifdef|ifndef|else|endif)\\b"
    },
    {
      "comment": "access modifiers (specifiers)",
      "name": "storage.modifier.mql5",
      "match": "\\b(const|private|protected|public|virtual|export)\\b"
    },
    {
      "comment": "memory classes",
      "name": "storage.input.mql5",
      "match": "\\b(extern|input|static|sinput)\\b"
    },
    {
      "comment": "data types",
      "name": "storage.type.mql5",
      "match": "\\b(void|bool|char|short|int|long|uchar|ushort|uint|ulong|double|float|string|color|datetime|enum|struct|class|interface)\\b"
    },
    {
      "comment": "control operators",
      "name": "keyword.control.mql5",
      "match": "\\b(return|if|else|for|while|do|break|continue|switch|case|default|new|delete)\\b"
    },
    {
      "comment": "other keywords",
      "name": "keyword.other.mql5",
      "match": "\\b(operator|sizeof|this|template|typename|typedef|trash|defined|unsigned|dynamic_cast|override|final|pack|offsetof)\\b"
    },
    {
      "comment": "defined macro constants",
      "name": "keyword.other.mql5",
      "match": "\\b(__COUNTER__|__CPU_ARCHITECTURE__|__DATETIME__|__DATE__|__FILE__|__FUNCSIG__|__FUNCTION__|__INCLUDE_LEVEL__|__LINE__|__MQL4BUILD__|__MQL5BUILD__|__MQL5__|__MQLBUILD__|__PATH__|__RANDOM__|__forceinline|__inline)\\b"
    },
    {
      "comment": "operators",
      "match": "=|\\+|\\-|<|>|!|\\*|/|%|&|\\||~|\\^|,|:|\\?|;",
      "name": "punctuation.definition.operator.mql5"
    },
    {
      "comment": "brackets",
      "name": "punctuation.definition.brackets.mql5",
      "match": "\\(|\\)|\\[|\\]"
    },
    {
      "include": "#builtin_functions"
    },
    {
      "include": "#builtin_indicators"
    },
    {
      "include": "#predefined_variables"
    },
    {
      "include": "#predefined_constants"
    },
    {
      "comment": "string constants",
      "name": "constant.string.mql5",
      "match": "\\b\\w+\\b"
    },
    {
      "comment": "decimal integer and float numeric constants",
      "name": "constant.numeric.decimal.mql5",
      "match": "\\b([0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)\\b"
    },
    {
      "comment": "hexadecimal numeric constants",
      "name": "constant.numeric.hex.mql5",
      "match": "\\b(0[xX][0-9a-fA-F]+)\\b"
    },
    {
      "comment": "color, datetime and binary numeric constants",
      "name": "constant.numeric.other.mql5",
      "match": "([CDB]\\'[0-9a-fA-FxX\\.\\:\\,\\s]*\\')"
    },
    {
      "comment": "other variables",
      "name": "variable.other.mql5",
      "match": "\\b([a-zA-Z_]+[a-zA-Z0-9_]*)\\b"
    },
    {
      "comment": "code blocks",
      "name": "meta.block.mql5",
      "begin": "(\\{)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.block.begin.mql5"
        }
      },
      "end": "(\\})",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.end.mql5"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "comment": "block comments",
          "name": "comment.block.mql5",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "comment": "single-line comments",
          "name": "comment.line.double-slash.mql5",
          "begin": "//",
          "end": "$\\n?"
        }
      ]
    },
    "escape_characters": {
      "patterns": [
        {
          "comment": "escape characters",
          "name": "constant.character.escape.mql5",
          "match": "\\\\."
        }
      ]
    },
    "builtin_functions": {
      "patterns": [
        {
          "comment": "MQL5 built-in functions and event handlers",
          "name": "entity.name.function.mql5",
          "match": "(?<!\\.)\\b()\\b"
        }
      ]
    },
    "builtin_indicators": {
      "patterns": [
        {
          "comment": "MQL5 built-in indicators",
          "name": "support.function.mql5",
          "match": "(?<!\\.)\\b()\\b"
        }
      ]
    },
    "predefined_variables": {
      "patterns": [
        {
          "comment": "MQL5 predefined variables",
          "name": "variable.language.predefined.mql5",
          "match": "\\b()\\b"
        }
      ]
    },
    "predefined_constants": {
      "patterns": [
        {
          "comment": "MQL5 predefined constants",
          "name": "support.constant.mql5",
          "match": "\\b()\\b"
        }
      ]
    }
  }
}
